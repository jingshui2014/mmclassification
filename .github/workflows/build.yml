# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 isort yapf interrogate
      - name: Lint with flake8
        run: flake8 .
      - name: Lint with isort
        run: isort --recursive --check-only --diff mmcls/ tests/ examples/
      - name: Format python codes with yapf
        run: yapf -r -d mmcls/ tests/ examples/

  build:
    env:
      CUDA: 10.1.105-1
      CUDA_SHORT: 10.1
      UBUNTU_VERSION: ubuntu1804
      FORCE_CUDA: 1
      CUDA_ARCH: ${{matrix.cuda_arch}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7]
        torch: [1.3.0, 1.5.0]
        include:
          - torch: 1.3.0
            torchvision: 0.4.2
            cuda_arch: "6.0"
          - torch: 1.5.0
            torchvision: 0.6.0
            cuda_arch: "7.0"

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pillow
        run: pip install Pillow==6.2.2
        if: ${{matrix.torchvision < 0.5}}
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install mmcls dependencies
        run: |
          pip install -r requirements.txt
      - name: Build and install
        run: |
          rm -rf .eggs
          python setup.py check -m -s
          TORCH_CUDA_ARCH_LIST=${CUDA_ARCH} python setup.py build_ext --inplace
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmcls -m pytest tests/
          coverage xml
          coverage report -m --omit="mmcls/utils/*","mmcls/apis/*"
      # Only upload coverage report for python3.7 && pytorch1.5
      - name: Upload coverage to Codecov
        if: ${{matrix.torch == '1.5.0+cu101' && matrix.python-version == '3.7'}}
        uses: codecov/codecov-action@v1.0.10
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
